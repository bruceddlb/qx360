@{
    ViewBag.Title = "年检机构详情";
}
@section scripts{
    <script type="text/javascript">
        var id = request('id');
        var type = request('type');//集团客户和个人
        function ViewModel() {
            var self = this;
            self.IsOwner = ko.observable("0");
            self.CommitteeList = ko.observableArray([]);
            self.FreeTimeList = ko.observableArray([]);
            self.Audit = ko.observable({
                Name: ko.observable(""),
                AddressInfo: ko.observable(""),
                ConectTel: ko.observable(""),
                AttachmentPicList: ko.observableArray([]),
                Content: ko.observable(""),
                Price: ko.observable(""),
                VideoContent: ko.observable(""),
                PriceContent: ko.observable(""),
                Lng: ko.observable(""),
                Lat: ko.observable(""),
                ConectName: ko.observable(""),
            });
            self.Owner = ko.observable({
                OwnerId: ko.observable(""),
                CarNumber: ko.observable(""),
                CarColor: ko.observable(""),
                CarNumber: ko.observable(""),
                MemberId: ko.observable(""),
                MemberName: ko.observable(""),
                MemberMobile: ko.observable(""),
                CarFrameNum: ko.observable(""),
                RegisterTime: ko.observable(""),
                UseType: ko.observable(""),
                UseTypeName: ko.observable(""),
                CarType: ko.observable(""),
                CarTypeName: ko.observable(""),
                PeopleCount: ko.observable(""),
            });
            self.AuditOrder = ko.observable({
                MemberId: ko.observable(""),
                MemberName: ko.observable(""),
                CarNum: ko.observable(""),
                Mobile: ko.observable(""),
                ServiceDate: ko.observable(""),
                ServiceTime: ko.observable(""),
                OrganizationId: ko.observable(""),
                OrganizationName: ko.observable(""),
                Price: ko.observable(""),
                CarFrameNum: ko.observable(""),
                RegisterTime: ko.observable(""),
            });
            self.AuditGroupOrder = ko.observable({
                MemberId: ko.observable(""),
                MemberName: ko.observable(""),
                Mobile: ko.observable(""),
                ServiceDate: ko.observable(""),
                ServiceTime: ko.observable(""),
                OrganizationId: ko.observable(""),
                OrganizationName: ko.observable(""),
                Price: ko.observable(""),
                GroupName: ko.observable(""),
                CarCount: ko.observable(""),
                CarType: ko.observable(""),
                Remark: ko.observable(""),
            });
            self.BindAudit = function () {
                $.get("/Audit/GetAuditModel", { id: id }, function (result) {
                    if (result.IsSuccess) {
                        var data = result.ResultData["Data"];
                        if (data) {
                            self.Audit().Name(data.Name);
                            self.Audit().AddressInfo(data.AddressInfo);
                            self.Audit().ConectTel(data.ConectTel);
                            self.Audit().AttachmentPicList(data.AttachmentPic);
                            self.Audit().Content(decodeHtml(data.Content));
                            self.Audit().Price(data.MakeMoney);
                            if (data.VideoContent) {
                                self.Audit().VideoContent("@(System.Configuration.ConfigurationManager.AppSettings["ImageHost"])" + data.VideoContent);
                            }
                            self.Audit().PriceContent(decodeHtml(data.PriceContent));
                            self.Audit().Lng(data.Lng);
                            self.Audit().Lat(data.Lat);
                            self.Audit().ConectName(data.ConectName);
                            //
                            self.AuditOrder().OrganizationId(data.OrganizationId);
                            self.AuditOrder().OrganizationName(data.Name);
                            //self.AuditOrder().Price(data.MakeMoney);

                            self.AuditGroupOrder().OrganizationId(data.OrganizationId);
                            self.AuditGroupOrder().OrganizationName(data.Name);
                            self.AuditGroupOrder().Price(data.MakeMoney);

                        }
                        var mySwiper = new Swiper('.swiper-container', {
                            pagination: '.pagination',
                            slidesPerView: 1,
                            loop: true,
                            autoplay: 3000,
                            autoplayDisableOnInteraction: false,
                            speed: 500
                        });
                    }
                });
            }
            self.CallTel = function () {
                window.location.href = 'tel:' + self.Audit().ConectTel();
            }
            self.mapDetail = function (a, b, c, d, e, f) {
                var aa = "";
                aa += a + "$" + b + "$" + c + "$" + d + "$" + e + "$" + f;
                var aa = Base64encode(aa);
                window.location.href = "/map/index?data=" + aa;
            }
            self.BindCommittee = function () {
                $.get("/AuditCommittee/List", { organizationid: id }, function (result) {
                    if (result.IsSuccess) {
                        self.CommitteeList.removeAll();
                        var list = result.ResultData["List"];
                        for (var i = 0; i < list.length; i++) {
                            var item = list[i];
                            var comlev = [];
                            if (item.CommitLev) {
                                for (var j = 0; j < item.CommitLev; j++) {
                                    comlev.push(j);
                                }
                            }
                            item.CommitteeLev = comlev;
                            self.CommitteeList.push(item);
                        }

                    }
                });
            }
            self.BindUser = function () {
                $.post("/Account/GetUserDetail", null, function (result) {
                    if (result.IsSuccess) {
                        var data = result.ResultData["Data"];
                        if (data) {
                            self.AuditOrder().MemberId(data.MemberId);//
                            self.AuditOrder().MemberName(data.MemberName);//
                            self.AuditOrder().Mobile(data.Mobile);//

                            self.AuditGroupOrder().MemberId(data.MemberId);//
                            self.AuditGroupOrder().MemberName(data.MemberName);//
                            self.AuditGroupOrder().Mobile(data.Mobile);//

                            if (data.Owner) {
                                var cararea = data.Owner.CarNumber.substring(0, 1);
                                $("#ddlCarArea").val(cararea);
                                var carnum = data.Owner.CarNumber.substring(1, data.Owner.CarNumber.length);
                                $("#txtCarNum").val(carnum);
                                self.Owner().CarNumber(cararea + carnum);
                                self.Owner().MemberId(data.Owner.MemberId);
                                self.Owner().MemberName(data.Owner.MemberName);
                                self.Owner().CarColor(data.Owner.CarColor);
                                self.Owner().CarFrameNum(data.Owner.CarFrameNum);
                                self.Owner().MemberMobile(data.Owner.MemberMobile);
                                self.Owner().UseType(data.Owner.UseType);
                                self.Owner().UseTypeName(data.Owner.UseTypeName);
                                self.Owner().CarType(data.Owner.CarType);
                                self.Owner().CarTypeName(data.Owner.CarTypeName);
                                self.Owner().PeopleCount(data.Owner.PeopleCount);
                                if (data.Owner.RegisterTime) {
                                    self.Owner().RegisterTime(formatDate(data.Owner.RegisterTime, "yyyy-MM"));
                                }

                                self.AuditOrder().Mobile(self.Owner().MemberMobile());
                                self.AuditOrder().MemberName(self.Owner().MemberName());
                                self.AuditOrder().CarNum(self.Owner().CarNumber());
                                self.AuditOrder().CarFrameNum(self.Owner().CarFrameNum());
                                self.AuditOrder().RegisterTime(self.Owner().RegisterTime());
                            } else {
                                self.Owner().MemberId(data.MemberId);
                                self.Owner().MemberName(data.MemberName);
                                self.Owner().MemberMobile(data.Mobile);
                            }

                        }
                    } else {
                        GotoLoginPage();
                    }
                });
            }

            self.CreateOrder = function () {
                if (!self.AuditOrder().ServiceDate()) {
                    ShowTips("请选择预约时间!");
                    return;
                }
                var now = new Date();
                var date = formatDate(now, 'yyyy-MM-dd');
                var servicedate = formatDate(self.AuditOrder().ServiceDate(), 'yyyy-MM-dd');
                if (date > servicedate) {
                    ShowTips("此日期已过期，不能选择");
                    return;
                }
                var time = self.AuditOrder().ServiceTime();
                if (time) {
                    if (time == "上午") {
                        time = "@(QX360.Business.SettingsBLL.Instance.GetValue("swsj"))";
                    }
                    if (time == "下午") {
                        time = "@(QX360.Business.SettingsBLL.Instance.GetValue("xwsj"))";
                    }
                    if (formatDate(now, 'yyyy-MM-dd hh:mm:ss') > formatDate(servicedate + " " + time, 'yyyy-MM-dd hh:mm:ss')) {
                        ShowTips("此时间已过期，不能选择");
                        return;
                    }
                }

                $.post("/Audit/CreateOrder", { "data": ko.toJSON(self.AuditOrder()) }, function (result) {
                    if (result.IsSuccess) {
                        ShowTips(result.Message, "ok");
                        setTimeout(function () {
                            location.href = "/Audit/Return?type=" + type;
                        }, 200)

                    } else {
                        ShowTips(result.Message);
                    }
                });
            }

            self.CreateGroupOrder = function () {
                if (!self.AuditGroupOrder().GroupName()) {
                    ShowTips("请输入集团名称!");
                    return;
                }
                if (!self.AuditGroupOrder().CarCount()) {
                    ShowTips("请输入车辆数量!");
                    return;
                }
                if (!self.AuditGroupOrder().CarType()) {
                    ShowTips("请输入车辆类型!");
                    return;
                }
                if (!self.AuditGroupOrder().ServiceDate()) {
                    ShowTips("请选择预约时间!");
                    return;
                }


                $.post("/Audit/CreateGroupOrder", { "data": ko.toJSON(self.AuditGroupOrder()) }, function (result) {
                    if (result.IsSuccess) {
                        ShowTips(result.Message, "ok");
                        setTimeout(function () {
                            location.href = "/Audit/Return?type" + type;
                        }, 200)

                    } else {
                        ShowTips(result.Message);
                    }
                });
            }
            self.SetOwner = function () {
                self.Owner().CarNumber($("#ddlCarArea").val() + $("#txtCarNum").val());
                if (!self.Owner().UseType()) {
                    ShowTips("请选择车辆使用性质!");
                    return;
                }
                if (!self.Owner().CarType()) {
                    ShowTips("请选择车辆类型!");
                    return;
                }
                if (!self.Owner().CarFrameNum()) {
                    ShowTips("请填写车架号后四位!");
                    return;
                }
                if (!self.Owner().CarNumber()) {
                    ShowTips("请填写车牌号!");
                    return;
                }
                if (!self.Owner().MemberMobile()) {
                    ShowTips("请填写联系方式!");
                    return;
                }
                if (!self.Owner().RegisterTime()) {
                    ShowTips("请选择车辆注册日期!");
                    return;
                }
               
                $.post("/Owner/CreateOwner", { "data": ko.toJSON(self.Owner()) }, function (result) {
                    if (result.IsSuccess) {
                        $(".Vslpopup_close").trigger("click");
                    } else {
                        ShowTips(result.Message);
                    }
                });
            }
            self.ShowOwner = function () {
                $('.Vsl_back').show();
                $('.Vslpopup').show();
            }
        }

        $(function () {
            var model = new ViewModel();
            ko.applyBindings(model);
            model.BindAudit();
            model.BindUser();
            model.BindCommittee();
            var Owner = function () {
                //选择时间
                var selectDateDom = $('#RgTime');
                var showDateDom = $('#RgTime');
                // 初始化时间
                var now = new Date();
                var nowYear = now.getFullYear();
                var nowMonth = now.getMonth() + 1;
                var nowDate = now.getDate();
                showDateDom.attr('data-year', nowYear);
                showDateDom.attr('data-month', nowMonth);
                showDateDom.attr('data-date', nowDate);
                // 数据初始化
                function formatYear(nowYear) {
                    var arr = [];
                    for (var i = nowYear - 20; i <= nowYear + 20; i++) {
                        arr.push({
                            id: i + '',
                            value: i + '年'
                        });
                    }
                    return arr;
                }
                function formatMonth() {
                    var arr = [];
                    for (var i = 1; i <= 12; i++) {
                        arr.push({
                            id: i + '',
                            value: i + '月'
                        });
                    }
                    return arr;
                }
                function formatDate(count) {
                    var arr = [];
                    for (var i = 1; i <= count; i++) {
                        arr.push({
                            id: i + '',
                            value: i + '日'
                        });
                    }
                    return arr;
                }
                var yearData = function (callback) {
                    callback(formatYear(nowYear))
                }
                var monthData = function (year, callback) {
                    callback(formatMonth());
                };
                var dateData = function (year, month, callback) {
                    if (/^(1|3|5|7|8|10|12)$/.test(month)) {
                        callback(formatDate(31));
                    }
                    else if (/^(4|6|9|11)$/.test(month)) {
                        callback(formatDate(30));
                    }
                    else if (/^2$/.test(month)) {
                        if (year % 4 === 0 && year % 100 !== 0 || year % 400 === 0) {
                            callback(formatDate(29));
                        }
                        else {
                            callback(formatDate(28));
                        }
                    }
                    else {
                        throw new Error('month is illegal');
                    }
                };
                selectDateDom.bind('click', function () {
                    var oneLevelId = showDateDom.attr('data-year');
                    var twoLevelId = showDateDom.attr('data-month');
                    var threeLevelId = showDateDom.attr('data-date');
                    var iosSelect = new IosSelect(2,
                        [yearData, monthData, dateData],
                        {
                            title: '选择车辆初次登记日期',
                            itemHeight: 35,
                            itemShowCount: 9,
                            oneLevelId: oneLevelId,
                            twoLevelId: twoLevelId,
                            threeLevelId: threeLevelId,
                            callback: function (selectOneObj, selectTwoObj, selectThreeObj, selectFourObj, selectFiveObj) {
                                showDateDom.attr('data-year', selectOneObj.id);
                                showDateDom.attr('data-month', selectTwoObj.id);
                                //showDateDom.attr('data-date', selectThreeObj.id);
                                selectDateDom.val(selectOneObj.value + ' ' + selectTwoObj.value);
                                if (selectOneObj.value && selectTwoObj.value) {
                                    var date = selectOneObj.value.replace("年", '') + "-" + selectTwoObj.value.replace("月", '');
                                    model.Owner().RegisterTime(date);
                                }

                            }
                        });
                });


                //使用性质
                var useType_show = $('#usetype');
                var usetypedata = GetUseTypeList();
                useType_show.bind('click', function () {
                    var bankSelect = new IosSelect(1,
                        [usetypedata],
                        {
                            container: '.container',
                            title: '选择车辆使用性质',
                            itemHeight: 50,
                            itemShowCount: 3,
                            oneLevelId: model.Owner().UseType(),
                            callback: function (selectOneObj) {
                                useType_show.val(selectOneObj.value);
                                model.Owner().UseType(selectOneObj.id);
                                model.Owner().UseTypeName(selectOneObj.value);
                            }
                        });
                });
                var carType_show = $('#cartype');
                var cartypedata = GetCarTypeList();
                carType_show.bind('click', function () {

                    var bankSelect = new IosSelect(1,
                        [cartypedata],
                        {
                            container: '.container',
                            title: '选择车辆类型',
                            itemHeight: 50,
                            itemShowCount: 3,
                            oneLevelId: model.Owner().CarType(),
                            callback: function (selectOneObj) {
                                carType_show.val(selectOneObj.value);
                                model.Owner().CarType(selectOneObj.id);
                                model.Owner().CarTypeName(selectOneObj.value);
                            }
                        });
                });
            }
            //认证车主
            Owner();
            //添加弹窗
            $('#DtBtn').on('click', function () {
                //判断按钮为有效状态
                var disabled = $('#DtBtn').attr('class');
                if (disabled == "Dtle_btn") {
                    ShowTips("请先了解并同意须知");
                    return;
                }
                if (type == "1") {
                    //如果车主没认证弹出认证页面
                    if (!model.Owner().CarNumber()) {
                        model.ShowOwner();
                    } else {
                        $('.VsLde_back').show();
                        $('#personaudit').show();
                    }

                } else {
                    $('.VsLde_back').show();
                    $('#groupaudit').show();
                }

            })
            $('.Vslpopup_close').on('click', function () {
                $('.Vsl_back').hide();
                $('.Vslpopup').hide();
            })
            $('.VsLdepopup_close').on('click', function () {
                $('.VsLde_back').hide();
                $('.VsLdepopup').hide();
            })

            $('#Dcde1').on('click', function () {
                $('.Dcde_nav dd').removeClass('Dcde_nav_dd')
                $(this).addClass('Dcde_nav_dd')
                $('#auditinfo').show();
                $('#auditel').hide();
                $('#auditpriceinfo').hide();
            })
            $('#Dcde2').on('click', function () {
                $('.Dcde_nav dd').removeClass('Dcde_nav_dd')
                $(this).addClass('Dcde_nav_dd')
                $('#auditinfo').hide()
                $('#auditel').show()
                $('#auditpriceinfo').hide();
            })
            $('#Dcde3').on('click', function () {
                $('.Dcde_nav dd').removeClass('Dcde_nav_dd')
                $(this).addClass('Dcde_nav_dd')
                $('#auditinfo').hide()
                $('#auditel').hide()
                $('#auditpriceinfo').show();
            })

            //陪驾须知弹窗
            $('.DcS_Notice span').on('click', function () {
                $('.DcS_back').show();
                $('.popup').show();
            })
            //关闭陪驾须知弹窗
            $('.popup_close i').on('click', function () {
                $('.DcS_back').hide();
                $('.popup').hide();
            })
            //选中陪驾须知
            $('.DcS_Notice font').on('click', function () {
                if ($(this).attr('class') == 'DcS_Ne_font') {
                    $(this).attr('class', '');

                    $('#DtBtn').attr('class', 'Dtle_btn');
                } else {
                    $(this).addClass('DcS_Ne_font');
                    $('#DtBtn').attr('class', 'Dtle_btn2');

                }

            })

            //选择时间
            var selectDateDom = $("#AsTime");
            var selectgroupDateDom = $("#groupAsTime");
            function getDate() {
                var arr = [];
                $.ajax({
                    type: "GET",
                    url: "/AuditFreeTime/GetWeekDateJson",
                    async: false,
                    data: { objectid: id },
                    success: function (result) {
                        if (result.IsSuccess) {
                            var data = result.ResultData["List"];
                            if (data.length > 0) {
                                for (var i in data) {
                                    var item = data[i];
                                    arr.push({
                                        id: item.AuditFreeDateId,
                                        value: formatDate(item.FreeDate, "yyyy-MM-dd") + "(" + item.WeekName + ")",
                                        text: formatDate(item.FreeDate, "yyyy-MM-dd"),
                                        type: item.DateType
                                    });

                                }
                            } else {
                                ShowTips("未设置工作时间");
                                return;
                            }

                        } else {
                            ShowTips(result.Message);
                            return;
                        }
                    }
                });
                return arr;
            }
            //获取工作时间段
            function getWorkTime(auditid, timesection) {
                var arr = {};
                $.ajax({
                    type: "Post",
                    url: "/AuditFreeTime/GetAuditTimeTable",
                    async: false,
                    data: { auditId: auditid, timeSection: timesection },
                    success: function (result) {
                        if (result.IsSuccess) {
                            arr = result.ResultData["Data"];
                        } else {
                            ShowTips(result.Message);
                            return;
                        }
                    }
                });

                return arr;
            }
            if (getDate().length == 0) {
                return;
            }
            var yearData = function (callback) {
                callback(getDate());
            }
            function getTimeSpace() {
                var arr = [];
                arr.push({ id: "@((int)QX360.Model.Enums.TimeSpaceType.上午)", value: "@(QX360.Model.Enums.TimeSpaceType.上午.ToString())" });
                arr.push({ id: "@((int)QX360.Model.Enums.TimeSpaceType.下午)", value: "@(QX360.Model.Enums.TimeSpaceType.下午.ToString())" });
                return arr;
            }
            var timeData = function (day, callback) {
                callback(getTimeSpace());
            }
            var clearData = function () {
                model.AuditOrder().ServiceDate("");
                model.AuditOrder().ServiceTime("");
                selectDateDom.val("");
            }
            var clearGroupData = function () {
                model.AuditGroupOrder().ServiceDate("");
                model.AuditGroupOrder().ServiceTime("");
                selectgroupDateDom.val("");
            }
            selectDateDom.bind('click', function () {
                var oneLevelId = selectDateDom.attr('data-year');
                var twoLevelId = selectDateDom.attr('data-month');
                var iosSelect = new IosSelect(2,
                    [yearData, timeData],
                    {
                        title: '选择预约时间',
                        itemHeight: 35,
                        itemShowCount: 9,
                        oneLevelId: oneLevelId,
                        twoLevelId: twoLevelId,
                        callback: function (selectOneObj, selectTwoObj) {
                            if (selectOneObj.type == "0") {
                                ShowTips("此时间为非工作日，不能选择");
                                return;
                            }
                            var servicedate = formatDate(selectOneObj.text, 'yyyy-MM-dd');
                            var time = selectTwoObj.value;
                            var now = new Date();
                            var nowdate = formatDate(now, 'yyyy-MM-dd');
                            if (nowdate > servicedate) {
                                ShowTips("此日期已过期，不能选择");
                                clearData();
                                return;
                            }

                            if (time) {
                                if (time == "上午") {
                                    time = "@(QX360.Business.SettingsBLL.Instance.GetValue("swsj"))";
                                }
                                if (time == "下午") {
                                    time = "@(QX360.Business.SettingsBLL.Instance.GetValue("xwsj"))";
                                }
                                if (formatDate(now, 'yyyy-MM-dd hh:mm:ss') > formatDate(servicedate + " " + time, 'yyyy-MM-dd hh:mm:ss')) {
                                    ShowTips("此时间已过期，不能选择");
                                    clearData();
                                    return;
                                }
                            }

                            selectDateDom.attr('data-year', selectOneObj.id);
                            selectDateDom.attr('data-month', selectTwoObj.id);
                            selectDateDom.val(selectOneObj.value + ' ' + selectTwoObj.value);
                            //判断工作时间
                            var timeobj = getWorkTime(selectOneObj.id, selectTwoObj.value);
                            if (timeobj) {
                                if (timeobj.FreeStatus == "3") {
                                    ShowTips("此时间为非工作时间，不能选择");
                                    clearData();
                                    return;
                                }
                                if (selectOneObj.value) {
                                    var date = selectOneObj.text;
                                    model.AuditOrder().ServiceDate(date);
                                }
                                if (selectTwoObj.value) {
                                    var time = selectTwoObj.value;
                                    model.AuditOrder().ServiceTime(time);
                                }
                            }

                        }
                    });
            });
            selectgroupDateDom.bind('click', function () {
                var oneLevelId = selectgroupDateDom.attr('data-year');
                var twoLevelId = selectgroupDateDom.attr('data-month');
                var iosSelect = new IosSelect(2,
                    [yearData, timeData],
                    {
                        title: '选择预约时间',
                        itemHeight: 35,
                        itemShowCount: 9,
                        oneLevelId: oneLevelId,
                        twoLevelId: twoLevelId,
                        callback: function (selectOneObj, selectTwoObj) {
                            if (selectOneObj.type == "0") {
                                ShowTips("此时间为非工作日，不能选择");
                                clearGroupData();
                                return;
                            }
                            var servicedate = formatDate(selectOneObj.text, 'yyyy-MM-dd');
                            var time = selectTwoObj.value;
                            var now = new Date();
                            var nowdate = formatDate(now, 'yyyy-MM-dd');
                            if (nowdate > servicedate) {
                                ShowTips("此日期已过期，不能选择");
                                clearGroupData();
                                return;
                            }

                            if (time) {
                                if (time == "上午") {
                                    time = "@(QX360.Business.SettingsBLL.Instance.GetValue("swsj"))";
                                }
                                if (time == "下午") {
                                    time = "@(QX360.Business.SettingsBLL.Instance.GetValue("xwsj"))";
                                }
                                if (formatDate(now, 'yyyy-MM-dd hh:mm:ss') > formatDate(servicedate + " " + time, 'yyyy-MM-dd hh:mm:ss')) {
                                    ShowTips("此时间已过期，不能选择");
                                    clearGroupData();
                                    return;
                                }
                            }
                            selectgroupDateDom.attr('data-year', selectOneObj.id);
                            selectgroupDateDom.attr('data-month', selectTwoObj.id);
                            selectgroupDateDom.val(selectOneObj.value + ' ' + selectTwoObj.value);
                            //判断工作时间
                            var timeobj = getWorkTime(selectOneObj.id, selectTwoObj.value);
                            if (timeobj) {
                                if (timeobj.FreeStatus == "3") {
                                    ShowTips("此时间为非工作时间，不能选择");
                                    clearGroupData();
                                    return;
                                }
                                if (selectOneObj.value) {
                                    var date = selectOneObj.text;
                                    model.AuditGroupOrder().ServiceDate(date);
                                }
                                if (selectTwoObj.value) {
                                    var time = selectTwoObj.value;
                                    model.AuditGroupOrder().ServiceTime(time);
                                }
                            }
                        }
                    });
            });

            //选择车牌所属区域
            var areadata = GetCarArea();
            if (areadata) {
                var $ddlCarArea = $("#ddlCarArea");
                for (var i = 0; i < areadata.length; i++) {
                    $ddlCarArea.append("<option value='" + areadata[i].value + "'>" + areadata[i].value + "</option>")
                }
            }

        });

        // HTML编码
        function encodeHtml(value) {
            if (!value || value.length == 0) {
                return "";
            }

            return value.replace(/&/g, "&amp;")
                        .replace(/>/g, "&gt;")
                        .replace(/</g, "&lt;")
                        .replace(/'/, "&quot;");
        }


        /// <summary>
        /// HTML解码
        /// </summary>
        function decodeHtml(value) {
            if (!value || value.length == 0) {
                return "";
            };
            return value.replace(/&lt;/g, "<")
                        .replace(/&gt;/g, ">")
                        .replace(/&amp;/g, "&")
                        .replace(/&quot;/g, "'");
        }



        function GetUseTypeList() {
            var rs = [];
            $.ajax({
                type: "GET",
                url: "/DataItemEnums/GetUseType",
                //async: false,
                data: null,
                success: function (result) {
                    if (result.IsSuccess) {
                        var data = result.ResultData["List"];
                        for (var i in data) {
                            var item = data[i];
                            rs.push({
                                "id": item.ItemId,
                                "value": item.ItemName,
                            });
                        }
                    }
                }
            });
            return rs;
        }
        function GetCarTypeList() {
            var rs = [];
            $.ajax({
                type: "GET",
                url: "/DataItemEnums/GetCarType",
                //async: false,
                data: null,
                success: function (result) {
                    if (result.IsSuccess) {
                        var data = result.ResultData["List"];
                        for (var i in data) {
                            var item = data[i];
                            rs.push({
                                "id": item.ItemId,
                                "value": item.ItemName,
                            });
                        }
                    }
                }
            });
            return rs;
        }
        function GetCarArea() {
            var rs = [];
            $.ajax({
                type: "GET",
                url: "/DataItemEnums/GetDataItem",
                async: false,
                data: { EnCode: "cararea" },
                success: function (result) {
                    if (result.IsSuccess) {
                        var data = result.ResultData["List"];
                        for (var i in data) {
                            var item = data[i];
                            rs.push({
                                "id": item.ItemId,
                                "value": item.ItemName,
                            });
                        }
                    }
                }
            });
            return rs;
        }
    </script>
}
@section css{
    <style type="text/css">
    </style>
}
<div class="DcS_back"></div>
<div class="popup">
    <div class="popup_h2">年检须知</div>
    <div class="popup_txt" style="height:230px;overflow:auto" id="widtdrivingNotice">
        @Html.Raw(ViewBag.Notice)
    </div>
    <div class="popup_close"><i class="iconfont icon-guanbi"></i></div>
</div>
<div class="Vsl_back"></div>
<div class="Vslpopup">
    <div class="Vslpopup_h2">请先完善您的车辆信息</div>
    <div class="Vslpopup_txt">
        <input type="text" placeholder="请选择车辆使用性质" id="usetype" class="Vsl_text" data-bind="value: $root.Owner().UseTypeName" readonly />
        <input type="text" placeholder="请选择车辆类型" id="cartype" class="Vsl_text" data-bind="value: $root.Owner().CarTypeName" readonly />
        <input type="text" placeholder="请填写车架号后四位" class="Vsl_text" data-bind="value: $root.Owner().CarFrameNum" />
        <input type="text" placeholder="请填写核载人数" class="Vsl_text" data-bind="value: $root.Owner().PeopleCount" />
        <div style="padding:5px" class="Vsl_text"><span class="" style="float:left;line-height:30px"><select style="font-weight:bold" id="ddlCarArea" class=""></select></span><input style="float:left;margin-left:10px; line-height:30px" type="text" placeholder="请填写您的车牌号" class="" id="txtCarNum" /></div>
        <input type="text" placeholder="请填写联系方式" class="Vsl_text" data-bind="value: $root.Owner().MemberMobile" />
        <input type="text" placeholder="请选择车辆注册日期" id="RgTime" class="Vsl_text" data-bind="value: $root.Owner().RegisterTime" readonly />
        <div class="Vsl_sub"><button type="button" class="Vsl_button" data-bind="click:function(){SetOwner()}">提交</button></div>
    </div>
    <div class="Vslpopup_close"><i class="iconfont icon-guanbi"></i></div>
</div>
<div class="VsLde_back"></div>
<div class="VsLdepopup" id="personaudit">
    <div class="VsLdepopup_h2">请选择预约年检时间</div>
    <div class="VsLdepopup_txt">
        <div class="VsLdepopup_li">预约人姓名：<span data-bind="text:$root.Owner().MemberName"></span></div>
        <div class="VsLdepopup_li">车牌号：<span data-bind="text:$root.Owner().CarNumber"></span></div>
        <div class="VsLdepopup_li">注册日期：<span data-bind="text:$root.Owner().RegisterTime"></span></div>
        <input type="text" placeholder="请选择您的预约时间" class="Mee_text" id="AsTime" readonly>
        <div class="VsLde_sub"><button type="button" class="Mee_button" data-bind="click:function(){$root.CreateOrder();}">确定预约</button></div>
    </div>
    <div class="VsLdepopup_close"><i class="iconfont icon-guanbi"></i></div>
</div>
<div class="VsLdepopup" style="height: 6rem;" id="groupaudit">
    <div class="VsLdepopup_h2">请输入年检信息</div>
    <div class="VsLdepopup_txt">
        <input type="text" placeholder="请输入集团名称" class="Ent_text2" data-bind="value:$root.AuditGroupOrder().GroupName" />
        <input type="text" placeholder="请输入车辆数量" class="Ent_text2" data-bind="value:$root.AuditGroupOrder().CarCount" />
        <input type="text" placeholder="请输入车辆类型" class="Ent_text2" data-bind="value:$root.AuditGroupOrder().CarType" />
        <input type="text" placeholder="请输入备注" class="Ent_text2" data-bind="value:$root.AuditGroupOrder().Remark" />
        <input type="text" placeholder="请选择您的预约时间" class="Mee_text" id="groupAsTime" readonly>
        <div class="VsLde_sub"><a href="VsLiReturn.html"><button type="button" class="Mee_button" data-bind="click:function(){$root.CreateGroupOrder();}">确定预约</button></a></div>
    </div>
    <div class="VsLdepopup_close" style="margin-top:2.2rem;"><i class="iconfont icon-guanbi"></i></div>
</div>


<div class="slide" style="height:4rem;">
    <div class="swiper-container" style="height:4rem;">
        <div class="swiper-wrapper" data-bind="foreach:$root.Audit().AttachmentPicList()">
            <div class="swiper-slide">
                <img data-bind="attr:{src:PicName}" alt="pic" class="s_img" />
            </div>
        </div>
        <div class="pagination s_buts s_right"></div>
    </div>
</div>

<div class="DtSe_top">
    <div class="DtSe_head">
        <div class="DtSe_h1" data-bind="text:$root.Audit().Name()"></div>
        @*<div class="DtSe_Price" data-bind="text:'￥'+$root.Audit().Price()+'起'"></div>*@
    </div>
    <div class="DtSe_add"><a href="/map/index" data-bind="click:function(){$root.mapDetail($root.Audit().Name(),$root.Audit().ConectName(),$root.Audit().ConectTel(),$root.Audit().Lng(),$root.Audit().Lat(),$root.Audit().AddressInfo())}"><i class="iconfont icon-dingwei"></i><span data-bind="text:$root.Audit().AddressInfo()"></span><i class="iconfont icon-jiantou Dtse_icon"></i></a></div>


    <div class="DtSe_tel"><i class="iconfont icon-dianhua"></i><span data-bind="text:$root.Audit().ConectTel()"></span><i style="float:right;margin-right:10px;margin-top:4px;" data-bind="click:function(){$root.CallTel();}">免费咨询</i><i class="iconfont icon-jiantou Dtse_icon"></i></div>
</div>



<dl class="Dcde_nav">
    <dd class="Dcde_nav_dd" id="Dcde1"><span>机构简介</span></dd>
    <dd id="Dcde2"><span>评价</span></dd>
    <dd id="Dcde3"><span>价格介绍</span></dd>
</dl>

<!--机构简介-->
<div class="Dcde_con" id="auditinfo">
    <div data-bind="attr:{style:$root.Audit().VideoContent()==''?'display:none':'display:block'}">
        <video data-bind="attr:{src:$root.Audit().VideoContent()}" width="100%" height="340" controls="controls" preload="auto"></video>
    </div>
    <div class="DtSe_txt" data-bind="html:$root.Audit().Content()">
    </div>
</div>

<ul class="EL_ul" style="display:none" id="auditel" data-bind="foreach:$root.CommitteeList">
    <li>
        <div class="EL_li_h2">
            <em data-bind="text:MemberName"></em>
            <font data-bind="foreach:CommitteeLev">
                <i class="iconfont icon-xing1"></i>
            </font>
            <span data-bind="text:formatDate(CommitTime,'yyyy-MM-dd hh:mm:ss')"></span>
        </div>
        <div class="EL_li_text" data-bind="text:CommitContent"></div>
    </li>
</ul>
<div class="Dcde_con" style="display:none" id="auditpriceinfo">
    <div class="" data-bind="html:$root.Audit().PriceContent()">
    </div>
</div>
<div class="DcS_Notice"><font><i class="iconfont icon-xuanzhong"></i>了解并同意</font><span>《年检须知》</span></div>
<div style="height:30px;"></div>

<div class=""><button type="button" class="Dtle_btn" id="DtBtn">预约年检</button></div>



